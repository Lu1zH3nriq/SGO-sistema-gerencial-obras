name: Build and deploy Node.js app to Azure Web App - app-sgo-api-2

on:
  workflow_run:
    workflows: ["Build and deploy Node.js app to Azure Web App - app-sgo-front"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          cd src/serverapp  # Navega até a pasta do backend
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: |
          cd src/serverapp  # Garante que ainda está na pasta do backend
          zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: src/serverapp/release.zip  # Caminho correto para o zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Necessário para solicitar o JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip  # Corrigido para usar o caminho padrão onde o artefato foi baixado

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_6C7039DEABF84AD08B1DE13ACD383ED8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_ECC086156FBE420FA2AC8E2521719524 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_27BA481A8FCA4D039CE0856B1D002734 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-sgo-api-2'
          slot-name: 'Production'
          package: .
          startup-command: 'pm2-runtime start src/index.js --name app-sgo-api'  # Comando de inicialização do PM2
